`timescale 1ns / 1ps

module quantizer_tb;

    // Inputs
    reg clk;
    reg rst_n;
    reg start;
    reg signed [15:0] dct_in;
    reg [7:0] quant_table;

    // Outputs
    wire signed [15:0] quant_out;
    wire valid_out;
    wire done;

    // Instantiate the Unit Under Test (UUT)
    quantizer uut (
        .clk(clk),
        .rst_n(rst_n),
        .start(start),
        .dct_in(dct_in),
        .quant_table(quant_table),
        .quant_out(quant_out),
        .valid_out(valid_out),
        .done(done)
    );

    // Clock generation
    initial begin
        clk = 0;
        forever #5 clk = ~clk; // 100MHz clock (10ns period)
    end

    // Test stimulus
    initial begin
        // Initialize inputs
        rst_n = 0;
        start = 0;
        dct_in = 0;
        quant_table = 0;

        // Reset
        #20;
        rst_n = 1;

        // Wait a bit
        #10;

        // Start the quantization process
        start = 1;
        #10;
        start = 0;

        // Provide 64 DCT values and quantization table values
        repeat (64) begin
            dct_in = $random % 2048 - 1024; // Random DCT values between -1024 and 1023
            quant_table = ($random % 255) + 1; // Random quantization values between 1 and 255
            #10; // Wait for one clock cycle
        end

        // Wait for done signal
        wait (done == 1);
        #20;

        // Finish simulation
        $display("Test completed!");
        $finish;
    end

    // Monitor outputs
    initial begin
        $monitor("Time=%0t rst_n=%b start=%b dct_in=%d quant_table=%d quant_out=%d valid_out=%b done=%b",
                 $time, rst_n, start, dct_in, quant_table, quant_out, valid_out, done);
    end

endmodule